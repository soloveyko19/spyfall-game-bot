services:
  telebot:
    build:
      context: ./src
      dockerfile: Dockerfile
    container_name: telebot
    networks:
      - postgres_access
      - redis_access
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - DEEPL_API_TOKEN=${DEEPL_API_TOKEN}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - REDIS_HOST=${REDIS_HOST}
      - LOG_LEVEL=${LOG_LEVEL}
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
    restart: always

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    networks:
      - postgres_access
    volumes:
      - ./postgres/postgres-data:/var/lib/postgresql/data
      - ./postgres/init_db.sql:/docker-entrypoint-initdb.d/init-db.sql
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#    ports:
#      - 5432:5432 # Only for developing (DO NOT USE IT IN PRODUCTION)

  redis:
    image: redis
    container_name: redis
    restart: always
    networks:
      - redis_access
#    volumes:
#      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
#    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
#    ports:
#      - 6379:6379 # Only for developing (DO NOT USE IT IN PRODUCTION)

networks:
  postgres_access:
    driver: bridge

  redis_access:
    driver: bridge