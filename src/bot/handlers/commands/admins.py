from database.models import Feedback, User, Game
from filters.user import AdminFilter
from filters.chat import ChatTypeFilter
from utils.messages import escape_markdown_v2
from utils.states import AdminStates, MailingStates, LocationStates
from keyboards.reply import request_contact_keyboard
from keyboards.inline import cancel_keyboard, location_options_keyboard

from aiogram import Router, types
from aiogram.filters import Command, CommandObject
from aiogram.utils.i18n import gettext as _
from aiogram.fsm.context import FSMContext


router = Router()


@router.message(Command("error"), AdminFilter())
async def command_error(message: types.Message):
    return 1 / 0


@router.message(
    Command("get_feedback"), ChatTypeFilter("private"), AdminFilter()
)
async def command_get_feedback(
    message: types.Message, command: CommandObject
):
    await message.delete()
    if not command.args:
        limit = 10
    else:
        try:
            limit = int(command.args)
        except ValueError:
            return await message.answer(
                text=_(
                    "*–û—à–∏–±–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è\\, –ª–∏–º–∏—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–∫–∞–∑–∞–Ω –≤ —á–∏—Å–ª–æ–≤–æ–º –∑–Ω–∞—á–µ–Ω–∏–∏\\!*"
                )
            )
    feedbacks = await Feedback.get_last(limit)
    await message.answer(
        text=_("–í–æ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç–∑—ã–≤—ã:\n\n")
        + "\n\n".join(
            [
                f"\\[\\#{feedback.id}\\] [{escape_markdown_v2(feedback.user.full_name)}](tg://user?id={feedback.user.tg_id}): {escape_markdown_v2(feedback.message)}"
                for feedback in feedbacks
            ]
        ),
    )


@router.message(Command("admin"), ChatTypeFilter("private"), AdminFilter())
async def command_admin(message: types.Message, state: FSMContext):
    await message.delete()
    await message.answer(
        text=_(
            "*–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —ç—Ç–æ–≥–æ –±–æ—Ç–∞\\! üë®‚Äçüíª*\n_–ü–æ–∂–∞–ª—É–π—Å—Ç–∞\\, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –∫–æ–Ω—Ç–∞–∫—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–∑–Ω–∞—á–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º üëá_"
        ),
        reply_markup=request_contact_keyboard(),
    )
    await state.set_state(AdminStates.message_user)


@router.message(Command("stats"), ChatTypeFilter("private"), AdminFilter())
async def command_statistics(message: types.Message):
    await message.delete()
    users_count = await User.get_count()
    games_count = await Game.get_count()
    active_games_count = await Game.get_active_count()
    await message.answer(
        text=_(
            "*–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üìà*\n\n–ö–æ–ª\\-–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users_count}\n–û–±—â–µ–µ –∫–æ–ª\\-–≤–æ –∏–≥—Ä: {games_count}\n–ö–æ–ª\\-–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä: {active_games_count}"
        ).format(
            users_count=users_count,
            games_count=games_count,
            active_games_count=active_games_count,
        ),
    )


@router.message(Command("mailing"), ChatTypeFilter("private"), AdminFilter())
async def command_mailing(message: types.Message, state: FSMContext):
    await message.delete()
    await message.answer(
        text=_(
            "*–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å —Å–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É\\!*\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–æ—Å–ª–∞—Ç—å\\."
        ),
        reply_markup=cancel_keyboard(),
    )
    await state.set_state(MailingStates.message)

@router.message(Command("location"), ChatTypeFilter("private"), AdminFilter())
async def command_location(message: types.Message, state: FSMContext):
    await message.delete()
    await message.answer(
        text=_("*–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:*"), reply_markup=location_options_keyboard()
    )
    await state.set_state(LocationStates.option)
