import os

import aiofiles

from filters.chat import ChatTypeFilter
from database.models import User, Player, Game
from utils.messages import LANGUAGES, join_message, language_by_locale
from utils.states import LanguageStates, FeedbackStates
from keyboards.inline import join_game_keyboard, cancel_keyboard, languages_keyboard, buy_me_a_coffee_keyboard

from aiogram import Router, types
from aiogram.filters import Command, CommandObject
from aiogram.utils.i18n import gettext as _
from aiogram.fsm.context import FSMContext
from aiogram.types import ReplyKeyboardRemove
from aiogram.types.input_file import FSInputFile


router = Router()


@router.message(Command("start"), ChatTypeFilter("private"))
async def command_start(
    message: types.Message, command: CommandObject, db_user: User
):
    if not db_user:
        lang = message.from_user.language_code
        db_user = User(
            tg_id=message.from_user.id,
            full_name=message.from_user.full_name,
            locale=lang if lang in LANGUAGES.keys() else None,
        )
        await db_user.save()
    elif db_user.full_name != message.from_user.full_name:
        db_user.full_name = message.from_user.full_name
        await db_user.save()
    if not command.args:
        return await message.answer(
            text=_(
                "*–ü—Ä–∏–≤–µ—Ç\\!* üëã\n–î–æ–±–∞–≤—å –º–µ–Ω—è –≤ –≥—Ä—É–ø–ø—É –≥–¥–µ –±—É–¥–µ–º –∏–≥—Ä–∞—Ç—å\\!"
            ),
        )
    game = await Game.get(join_key=command.args)
    if not game:
        return await message.reply(
            text=_(
                "*–û—à–∏–±–∫–∞ ‚ùóÔ∏è*\n_–¢–∞–∫–æ–π –∏–≥—Ä—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏–±–æ –æ–Ω–∞ —É–∂–µ –±—ã–ª–∞ –æ–∫–æ–Ω—á–µ–Ω–∞\\._"
            ),
        )
    elif game.state_id != 2:
        return await message.reply(
            text=_("*–û—à–∏–±–∫–∞ ‚ùóÔ∏è*\n–ù–∞–±–æ—Ä –≤ –∏–≥—Ä—É —É–∂–µ –æ–∫–æ–Ω—á–µ–Ω\\!"),
        )
    try:
        await Player.join_to_game(game_id=game.id, user_id=db_user.id)
    except ValueError:
        return await message.answer(text=_("*–í—ã —É–∂–µ –≤ –∏–≥—Ä–µ\\!* ‚õîÔ∏è"))
    await game.refresh()
    bot = await message.bot.get_me()
    await message.bot.edit_message_text(
        message_id=game.join_message_tg_id,
        chat_id=game.group_tg_id,
        text=join_message(seconds=90, players=sorted(game.players, key=lambda player: player.id), locale=game.locale),
        reply_markup=join_game_keyboard(
            join_key=game.join_key, bot_username=bot.username
        ),
    )
    await message.answer(
        text=_("*–í—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ –≤ –®–ø–∏–æ–Ω–∞\\! ‚úÖ*"),
    )


@router.message(Command("cancel"), ChatTypeFilter("private"))
async def command_cancel(message: types.Message, state: FSMContext):
    await state.clear()
    await message.delete()
    await message.answer(
        text=_("*–û—Ç–º–µ–Ω–∞\\! ‚ùå*\n–í—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–Ω—è—Ç—ã\\!"),
        reply_markup=ReplyKeyboardRemove(),
    )


@router.message(Command("feedback"), ChatTypeFilter("private"))
async def command_feedback(message: types.Message, state: FSMContext):
    await message.delete()
    await message.answer(
        text=_(
            "*–ß—Ç–æ–±—ã –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –Ω–∏–∂–µ\\. üëá*\n_–ù–∞–ø–æ–º–∏–Ω–∞–µ–º —á—Ç–æ —ç—Ç–æ –Ω–µ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π –ø—Ä–æ–¥—É–∫—Ç –∏ –∫–∞–∂–¥—ã–π –≤–∞—à –æ—Ç–∑—ã–≤ –ø–æ–º–æ–≥–∞–µ—Ç —É–ª—É—á—à–∏—Ç—å –µ–≥–æ\\._"
        ),
        reply_markup=cancel_keyboard(),
    )
    await state.set_state(FeedbackStates.feedback)


@router.message(Command("language"), ChatTypeFilter("private"))
async def command_language(
    message: types.Message, state: FSMContext, db_user: User
):
    await message.delete()
    await state.set_state(LanguageStates.user_locale)
    await message.answer(
        text=_("*–°–µ–π—á–∞—Å –≤–∞—à —è–∑—ã–∫: {language}\n–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ *").format(
            language=language_by_locale(db_user.locale)
        ),
        reply_markup=languages_keyboard(),
    )


@router.message(Command("coffee"), ChatTypeFilter("private"))
async def command_coffee(message: types.Message):
    await message.delete()
    pic_file_path = os.path.join("static", "img", "coffee.png")
    await message.answer_photo(
        photo=FSInputFile(path=pic_file_path),
        caption=_("–≠—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –ª–µ–∂–∏—Ç –Ω–∞ –ø–ª–µ—á–∞—Ö –æ–¥–Ω–æ–≥–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞\\, –∫–æ—Ç–æ—Ä—ã–π –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç —Ö–æ—Å—Ç–∏–Ω–≥ –¥–ª—è —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –∏ —É–¥–µ–ª—è–µ—Ç –±–æ–ª—å—à–æ–µ –∫–æ–ª\\-–≤–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –µ–≥–æ –ø–æ–¥–¥–µ—Ä–∂–∫—É\\. –¢–∞–∫ —á—Ç–æ –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç—å –µ–≥–æ —É–≥–æ—Å—Ç–∏–≤ —á–∞—à–µ—á–∫–æ–π –∫–æ—Ñ–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ –ª–∏–±–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–≤ QR\\-–∫–æ–¥ :\\)"),
        reply_markup=buy_me_a_coffee_keyboard(),
    )
