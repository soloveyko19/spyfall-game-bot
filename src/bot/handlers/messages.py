from aiogram.types import ReplyKeyboardRemove

from utils.states import LocationStates, FeedbackStates, AdminStates
from database.models import Location, User, Feedback
from keyboards.inline import cancel_keyboard
from utils.messages import escape_markdown_v2
from utils.commands import set_admin_commands

from aiogram import Router, types
from aiogram.fsm.context import FSMContext
from aiogram.filters import StateFilter

router = Router()


@router.message(StateFilter(LocationStates.location))
async def message_location(message: types.Message):
    locations_deserialized = message.text.lower().split(", ")
    locations = [
        Location(name=" ".join(location.split()))
        for location in locations_deserialized
    ]
    await Location.add_many(locations)
    msg = "*–õ–æ–∫–∞—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã:*\n\n"
    for location in locations:
        msg += f"{escape_markdown_v2(location.name)}\n"
    msg += "\n\n*–î–æ–±–∞–≤–∏–º –µ—â–µ\\?*"
    await message.answer(
        text=msg,
        reply_markup=cancel_keyboard(),
    )


@router.message(StateFilter(FeedbackStates.feedback))
async def message_feedback(message: types.Message, state: FSMContext, db_user: User):
    feedback = Feedback(user_id=db_user.id, message=message.text)
    await feedback.save()
    await state.clear()
    await message.answer(
        text="*–°–ø–∞—Å–∏–±–æ –∑–∞ —Ñ–∏–¥–±—ç–∫\\! ‚ù§Ô∏è*\n_–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏ –±—É–¥–µ—Ç –ø—Ä–∏–Ω—è—Ç–æ –≤–æ –≤–Ω–∏–º–∞–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏\\!_"
    )


@router.message(StateFilter(AdminStates.message_user))
async def message_admin_user(message: types.Message, state: FSMContext, db_user: User):
    if message.text == "–û—Ç–º–µ–Ω–∏—Ç—å! ‚ùå":
        await state.clear()
        await message.answer(
            text="–û—Ç–º–µ–Ω–µ–Ω–æ\\!",
            reply_markup=ReplyKeyboardRemove()
        )
        return
    elif message.user_shared:
        if db_user:
            db_user.is_admin = True
            await db_user.save()
            await message.answer(
                text=f"*–í—ã —É—Å–ø–µ—à–Ω–æ —Å–¥–µ–ª–∞–ª–∏ [{escape_markdown_v2(db_user.full_name)}](tg://user?id={db_user.tg_id}) –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º\\!*",
                reply_markup=ReplyKeyboardRemove(),
            )
            await state.clear()
            await message.bot.send_message(
                chat_id=db_user.tg_id,
                text=f"*[{escape_markdown_v2(message.from_user.full_name)}](tg://user?id={message.from_user.id}) –Ω–∞–∑–Ω–∞—á–∏–ª –í–∞—Å –º–æ–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º\\!*",
            )
            await set_admin_commands(bot=message.bot, user=db_user)
        else:
            await message.answer(
                text="*–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –º–æ–µ–π —Å–∏—Å—Ç–µ–º–µ\\!*\n_–°–ø–µ—Ä–≤–∞ –µ–º—É –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É /start\\._",
                reply_markup=ReplyKeyboardRemove(),
            )
            await state.clear()
    else:
        await message.answer(
            text="*–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥\\(*_–ü–æ–∂–∞–ª–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —á–µ—Ä–µ–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É üëá_"
        )
