from keyboards.inline import menu_keyboard, confirm_keyboard
from utils.states import AdminStates
from database.models import User
from filters.user import AdminFilter

from aiogram import Router, types
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import ReplyKeyboardRemove
from aiogram.utils.i18n import gettext as _

router = Router()


@router.message(StateFilter(AdminStates.message_user), AdminFilter())
async def message_admin_user(
    message: types.Message, state: FSMContext, db_user: User
):
    if message.text == _("–û—Ç–º–µ–Ω–∏—Ç—å! ‚ùå"):
        await message.answer(
            text=_("–û—Ç–º–µ–Ω–µ–Ω–æ\\!"), reply_markup=ReplyKeyboardRemove()
        )
        await state.clear()
        bot = await message.bot.get_me()
        return await message.answer(
            text=_("*–ü—Ä–∏–≤–µ—Ç\\!* üëã\n–î–æ–±–∞–≤—å –º–µ–Ω—è –≤ –≥—Ä—É–ø–ø—É –≥–¥–µ –±—É–¥–µ–º –∏–≥—Ä–∞—Ç—å\\!"),
            reply_markup=menu_keyboard(
                bot_username=bot.username, for_admins=db_user.is_admin
            ),
        )
    elif message.user_shared:
        new_admin_user = await User.get(tg_id=message.user_shared.user_id)
        if not new_admin_user:
            await message.answer(
                text=_(
                    "*–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –º–æ–µ–π —Å–∏—Å—Ç–µ–º–µ\\!*\n_–°–ø–µ—Ä–≤–∞ –µ–º—É –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É /start\\._"
                ),
                reply_markup=ReplyKeyboardRemove(),
            )
            await state.clear()
        elif new_admin_user.is_admin:
            await message.answer(
                text=_(
                    "*[{full_name}](tg://user?id={tg_id}) —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º\\!*"
                ).format(
                    full_name=new_admin_user.full_name,
                    tg_id=new_admin_user.tg_id,
                ),
                reply_markup=ReplyKeyboardRemove(),
            )
            await state.clear()
        else:
            await state.set_state(state=AdminStates.confirm_admin)
            await state.update_data(data={"new_admin_id": new_admin_user.id})
            await message.answer(
                text=_(
                    "*–í—ã —É–≤–µ—Ä–µ–Ω–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å [{full_name}](tg://user?id={tg_id}) –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º?*"
                ).format(
                    full_name=new_admin_user.full_name,
                    tg_id=new_admin_user.tg_id,
                ),
                reply_markup=ReplyKeyboardRemove(),
            )
            await message.answer(
                text=_("*–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ üëá*"),
                reply_markup=confirm_keyboard(),
            )
    else:
        await message.answer(
            text=_(
                "*–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥\\(*_–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —á–µ—Ä–µ–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É üëá_"
            )
        )
